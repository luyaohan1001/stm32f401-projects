ARM GAS  /tmp/cclXBdsf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB134:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "ili9341.h"
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cclXBdsf.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c ****  UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief  The application entry point.
  65:Core/Src/main.c ****   * @retval int
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** int main(void)
  68:Core/Src/main.c **** {
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/cclXBdsf.s 			page 3


  90:Core/Src/main.c ****   MX_GPIO_Init();
  91:Core/Src/main.c ****   MX_USART2_UART_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 	ili9341_init();
  94:Core/Src/main.c **** 	serial_print("hello world!\n");
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** 	uint8_t id4[4];
  97:Core/Src/main.c **** 	ili9341_get_id4(id4);
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   lcd_set_rotation(3);
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   lcd_clear_all(0xFFFF);
 104:Core/Src/main.c **** 	char message[64] = "> Hello. My Name is Luyao Han. Great to meet you!";
 105:Core/Src/main.c **** 	lcd_write_message(message, 0, 10, 1, 0x001F, 0xFFFF);
 106:Core/Src/main.c **** 	
 107:Core/Src/main.c **** 	strcpy(message, "> What's your name?");
 108:Core/Src/main.c **** 	lcd_write_message(message, 0, 20, 1, 0x001F, 0xFFFF);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** 	char* p_char = (char*) malloc (1);
 114:Core/Src/main.c **** 	free(p_char);
 115:Core/Src/main.c **** 	strcpy(message, "Some say the world will end in fire,");
 116:Core/Src/main.c **** 	lcd_write_message(message, 0, 30, 1, 0x001F, 0xFFFF);
 117:Core/Src/main.c ****   strcpy(message, "Some say in ice.");
 118:Core/Src/main.c **** 	lcd_write_message(message, 0, 40, 1, 0x001F, 0xFFFF);
 119:Core/Src/main.c ****   strcpy(message, "From what Ive tasted of desire");
 120:Core/Src/main.c **** 	lcd_write_message(message, 0, 50, 1, 0x001F, 0xFFFF);
 121:Core/Src/main.c ****   strcpy(message, "I hold with those who favour fire.");
 122:Core/Src/main.c **** 	lcd_write_message(message, 0, 60, 1, 0x001F, 0xFFFF);
 123:Core/Src/main.c ****   strcpy(message, "But if it had to perish twice,");
 124:Core/Src/main.c **** 	lcd_write_message(message, 0, 70, 1, 0x001F, 0xFFFF);
 125:Core/Src/main.c ****   strcpy(message, "I think I know enough of hate");
 126:Core/Src/main.c **** 	lcd_write_message(message, 0, 80, 1, 0x001F, 0xFFFF);
 127:Core/Src/main.c ****   strcpy(message, "To say that for destruction ice");
 128:Core/Src/main.c **** 	lcd_write_message(message, 0, 90, 1, 0x001F, 0xFFFF);
 129:Core/Src/main.c ****   strcpy(message, "Is also great");
 130:Core/Src/main.c **** 	lcd_write_message(message, 0, 100, 1, 0x001F, 0xFFFF);
 131:Core/Src/main.c ****   strcpy(message, "And would suffice.");
 132:Core/Src/main.c **** 	lcd_write_message(message, 0, 110, 1, 0x001F, 0xFFFF);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 	
 136:Core/Src/main.c ****   /* Infinite loop */
 137:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 138:Core/Src/main.c ****   while (1)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c **** 		lcd_clear_all(0x0000);
 141:Core/Src/main.c **** 		lcd_clear_all(0xFFFF);
 142:Core/Src/main.c **** 		// lcd_clear_all(0x001F);
 143:Core/Src/main.c **** 		// lcd_clear_all(0x07E0);
 144:Core/Src/main.c **** 		// lcd_clear_all(0xF800);
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****     //for(int i=0;i<500;i++)
ARM GAS  /tmp/cclXBdsf.s 			page 4


 147:Core/Src/main.c ****     //{
 148:Core/Src/main.c ****     //  lcd_draw_rectangle_unfilled(rand() % 300,rand() % 300,rand() % 300,rand() % 300,rand() % 65
 149:Core/Src/main.c ****     //}
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     // for(int i=0;i<10;i++)
 154:Core/Src/main.c ****     // { 
 155:Core/Src/main.c ****     //  lcd_draw_rectangle_filled(rand() % 300,rand() % 300,rand() % 300,rand() % 300,rand() % 6553
 156:Core/Src/main.c ****     //}
 157:Core/Src/main.c ****     /* USER CODE END WHILE */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c ****   /* USER CODE END 3 */
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /**
 165:Core/Src/main.c ****   * @brief System Clock Configuration
 166:Core/Src/main.c ****   * @retval None
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c **** void SystemClock_Config(void)
 169:Core/Src/main.c **** {
 170:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 171:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 179:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 203:Core/Src/main.c **** 
ARM GAS  /tmp/cclXBdsf.s 			page 5


 204:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****   * @brief USART2 Initialization Function
 212:Core/Src/main.c ****   * @param None
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 225:Core/Src/main.c ****   huart2.Instance = USART2;
 226:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 227:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 228:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 229:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 230:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 231:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 232:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 233:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 234:Core/Src/main.c ****   {
 235:Core/Src/main.c ****     Error_Handler();
 236:Core/Src/main.c ****   }
 237:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief GPIO Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_GPIO_Init(void)
 249:Core/Src/main.c **** {
  27              		.loc 1 249 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
ARM GAS  /tmp/cclXBdsf.s 			page 6


  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8AB0     		sub	sp, sp, #40
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 250:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 250 0
  44 0006 0024     		movs	r4, #0
  45 0008 0594     		str	r4, [sp, #20]
  46 000a 0694     		str	r4, [sp, #24]
  47 000c 0794     		str	r4, [sp, #28]
  48 000e 0894     		str	r4, [sp, #32]
  49 0010 0994     		str	r4, [sp, #36]
  50              	.LBB4:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 253:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 253 0
  52 0012 0194     		str	r4, [sp, #4]
  53 0014 344B     		ldr	r3, .L3
  54 0016 1A6B     		ldr	r2, [r3, #48]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 1A63     		str	r2, [r3, #48]
  57 001e 1A6B     		ldr	r2, [r3, #48]
  58 0020 02F00402 		and	r2, r2, #4
  59 0024 0192     		str	r2, [sp, #4]
  60 0026 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              	.LBB5:
 254:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  63              		.loc 1 254 0
  64 0028 0294     		str	r4, [sp, #8]
  65 002a 1A6B     		ldr	r2, [r3, #48]
  66 002c 42F08002 		orr	r2, r2, #128
  67 0030 1A63     		str	r2, [r3, #48]
  68 0032 1A6B     		ldr	r2, [r3, #48]
  69 0034 02F08002 		and	r2, r2, #128
  70 0038 0292     		str	r2, [sp, #8]
  71 003a 029A     		ldr	r2, [sp, #8]
  72              	.LBE5:
  73              	.LBB6:
 255:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  74              		.loc 1 255 0
  75 003c 0394     		str	r4, [sp, #12]
  76 003e 1A6B     		ldr	r2, [r3, #48]
  77 0040 42F00102 		orr	r2, r2, #1
  78 0044 1A63     		str	r2, [r3, #48]
  79 0046 1A6B     		ldr	r2, [r3, #48]
  80 0048 02F00102 		and	r2, r2, #1
  81 004c 0392     		str	r2, [sp, #12]
  82 004e 039A     		ldr	r2, [sp, #12]
  83              	.LBE6:
  84              	.LBB7:
 256:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  85              		.loc 1 256 0
  86 0050 0494     		str	r4, [sp, #16]
  87 0052 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/cclXBdsf.s 			page 7


  88 0054 42F00202 		orr	r2, r2, #2
  89 0058 1A63     		str	r2, [r3, #48]
  90 005a 1B6B     		ldr	r3, [r3, #48]
  91 005c 03F00203 		and	r3, r3, #2
  92 0060 0493     		str	r3, [sp, #16]
  93 0062 049B     		ldr	r3, [sp, #16]
  94              	.LBE7:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 259:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  95              		.loc 1 259 0
  96 0064 214E     		ldr	r6, .L3+4
  97 0066 2246     		mov	r2, r4
  98 0068 0321     		movs	r1, #3
  99 006a 3046     		mov	r0, r6
 100 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 262:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|LD2_Pin
 102              		.loc 1 262 0
 103 0070 DFF88080 		ldr	r8, .L3+12
 104 0074 2246     		mov	r2, r4
 105 0076 40F23351 		movw	r1, #1331
 106 007a 4046     		mov	r0, r8
 107 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 263:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_10, GPIO_PIN_RESET);
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 266:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_3|GPIO_PIN_4
 109              		.loc 1 266 0
 110 0080 1B4F     		ldr	r7, .L3+8
 111 0082 2246     		mov	r2, r4
 112 0084 40F23941 		movw	r1, #1081
 113 0088 3846     		mov	r0, r7
 114 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL2:
 267:Core/Src/main.c ****                           |GPIO_PIN_5, GPIO_PIN_RESET);
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 270:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 116              		.loc 1 270 0
 117 008e 4FF40053 		mov	r3, #8192
 118 0092 0593     		str	r3, [sp, #20]
 271:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 119              		.loc 1 271 0
 120 0094 4FF40413 		mov	r3, #2162688
 121 0098 0693     		str	r3, [sp, #24]
 272:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 272 0
 123 009a 0794     		str	r4, [sp, #28]
 273:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 124              		.loc 1 273 0
 125 009c 05A9     		add	r1, sp, #20
 126 009e 3046     		mov	r0, r6
 127 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/cclXBdsf.s 			page 8


 128              	.LVL3:
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /*Configure GPIO pins : PC0 PC1 */
 276:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 129              		.loc 1 276 0
 130 00a4 0323     		movs	r3, #3
 131 00a6 0593     		str	r3, [sp, #20]
 277:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 277 0
 133 00a8 0125     		movs	r5, #1
 134 00aa 0695     		str	r5, [sp, #24]
 278:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 278 0
 136 00ac 0794     		str	r4, [sp, #28]
 279:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137              		.loc 1 279 0
 138 00ae 0894     		str	r4, [sp, #32]
 280:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 139              		.loc 1 280 0
 140 00b0 05A9     		add	r1, sp, #20
 141 00b2 3046     		mov	r0, r6
 142 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL4:
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA4 LD2_Pin
 283:Core/Src/main.c ****                            PA8 PA10 */
 284:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|LD2_Pin
 144              		.loc 1 284 0
 145 00b8 40F23353 		movw	r3, #1331
 146 00bc 0593     		str	r3, [sp, #20]
 285:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_10;
 286:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 147              		.loc 1 286 0
 148 00be 0695     		str	r5, [sp, #24]
 287:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 287 0
 150 00c0 0794     		str	r4, [sp, #28]
 288:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 151              		.loc 1 288 0
 152 00c2 0894     		str	r4, [sp, #32]
 289:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 153              		.loc 1 289 0
 154 00c4 05A9     		add	r1, sp, #20
 155 00c6 4046     		mov	r0, r8
 156 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL5:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB10 PB3 PB4
 292:Core/Src/main.c ****                            PB5 */
 293:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_3|GPIO_PIN_4
 158              		.loc 1 293 0
 159 00cc 40F23943 		movw	r3, #1081
 160 00d0 0593     		str	r3, [sp, #20]
 294:Core/Src/main.c ****                           |GPIO_PIN_5;
 295:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 161              		.loc 1 295 0
 162 00d2 0695     		str	r5, [sp, #24]
ARM GAS  /tmp/cclXBdsf.s 			page 9


 296:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 296 0
 164 00d4 0794     		str	r4, [sp, #28]
 297:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 165              		.loc 1 297 0
 166 00d6 0894     		str	r4, [sp, #32]
 298:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 167              		.loc 1 298 0
 168 00d8 05A9     		add	r1, sp, #20
 169 00da 3846     		mov	r0, r7
 170 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL6:
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** }
 172              		.loc 1 300 0
 173 00e0 0AB0     		add	sp, sp, #40
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 24
 176              		@ sp needed
 177 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 178              	.L4:
 179 00e6 00BF     		.align	2
 180              	.L3:
 181 00e8 00380240 		.word	1073887232
 182 00ec 00080240 		.word	1073874944
 183 00f0 00040240 		.word	1073873920
 184 00f4 00000240 		.word	1073872896
 185              		.cfi_endproc
 186              	.LFE134:
 188              		.section	.text.Error_Handler,"ax",%progbits
 189              		.align	1
 190              		.global	Error_Handler
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	Error_Handler:
 197              	.LFB135:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /* USER CODE END 4 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /**
 307:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 308:Core/Src/main.c ****   * @retval None
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c **** void Error_Handler(void)
 311:Core/Src/main.c **** {
 198              		.loc 1 311 0
 199              		.cfi_startproc
 200              		@ Volatile: function does not return.
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204              	.LBB8:
 205              	.LBB9:
ARM GAS  /tmp/cclXBdsf.s 			page 10


 206              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  /tmp/cclXBdsf.s 			page 11


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  /tmp/cclXBdsf.s 			page 12


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 207              		.loc 2 142 0
 208              		.syntax unified
 209              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 210 0000 72B6     		cpsid i
 211              	@ 0 "" 2
 212              		.thumb
 213              		.syntax unified
 214              	.L6:
 215 0002 FEE7     		b	.L6
 216              	.LBE9:
 217              	.LBE8:
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 222              		.align	1
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	MX_USART2_UART_Init:
 229              	.LFB133:
 216:Core/Src/main.c **** 
 230              		.loc 1 216 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI3:
ARM GAS  /tmp/cclXBdsf.s 			page 13


 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 225:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 239              		.loc 1 225 0
 240 0002 0A48     		ldr	r0, .L11
 241 0004 0A4B     		ldr	r3, .L11+4
 242 0006 0360     		str	r3, [r0]
 226:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 243              		.loc 1 226 0
 244 0008 4FF4E133 		mov	r3, #115200
 245 000c 4360     		str	r3, [r0, #4]
 227:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 246              		.loc 1 227 0
 247 000e 0023     		movs	r3, #0
 248 0010 8360     		str	r3, [r0, #8]
 228:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 249              		.loc 1 228 0
 250 0012 C360     		str	r3, [r0, #12]
 229:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 251              		.loc 1 229 0
 252 0014 0361     		str	r3, [r0, #16]
 230:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 253              		.loc 1 230 0
 254 0016 0C22     		movs	r2, #12
 255 0018 4261     		str	r2, [r0, #20]
 231:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 256              		.loc 1 231 0
 257 001a 8361     		str	r3, [r0, #24]
 232:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 258              		.loc 1 232 0
 259 001c C361     		str	r3, [r0, #28]
 233:Core/Src/main.c ****   {
 260              		.loc 1 233 0
 261 001e FFF7FEFF 		bl	HAL_UART_Init
 262              	.LVL7:
 263 0022 00B9     		cbnz	r0, .L10
 264 0024 08BD     		pop	{r3, pc}
 265              	.L10:
 235:Core/Src/main.c ****   }
 266              		.loc 1 235 0
 267 0026 FFF7FEFF 		bl	Error_Handler
 268              	.LVL8:
 269              	.L12:
 270 002a 00BF     		.align	2
 271              	.L11:
 272 002c 00000000 		.word	huart2
 273 0030 00440040 		.word	1073759232
 274              		.cfi_endproc
 275              	.LFE133:
 277              		.section	.text.SystemClock_Config,"ax",%progbits
 278              		.align	1
 279              		.global	SystemClock_Config
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cclXBdsf.s 			page 14


 285              	SystemClock_Config:
 286              	.LFB132:
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 287              		.loc 1 169 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 80
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 00B5     		push	{lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 14, -4
 295 0002 95B0     		sub	sp, sp, #84
 296              	.LCFI5:
 297              		.cfi_def_cfa_offset 88
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 298              		.loc 1 170 0
 299 0004 3022     		movs	r2, #48
 300 0006 0021     		movs	r1, #0
 301 0008 08A8     		add	r0, sp, #32
 302 000a FFF7FEFF 		bl	memset
 303              	.LVL9:
 171:Core/Src/main.c **** 
 304              		.loc 1 171 0
 305 000e 0023     		movs	r3, #0
 306 0010 0393     		str	r3, [sp, #12]
 307 0012 0493     		str	r3, [sp, #16]
 308 0014 0593     		str	r3, [sp, #20]
 309 0016 0693     		str	r3, [sp, #24]
 310 0018 0793     		str	r3, [sp, #28]
 311              	.LBB10:
 175:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 312              		.loc 1 175 0
 313 001a 0193     		str	r3, [sp, #4]
 314 001c 1F4A     		ldr	r2, .L19
 315 001e 116C     		ldr	r1, [r2, #64]
 316 0020 41F08051 		orr	r1, r1, #268435456
 317 0024 1164     		str	r1, [r2, #64]
 318 0026 126C     		ldr	r2, [r2, #64]
 319 0028 02F08052 		and	r2, r2, #268435456
 320 002c 0192     		str	r2, [sp, #4]
 321 002e 019A     		ldr	r2, [sp, #4]
 322              	.LBE10:
 323              	.LBB11:
 176:Core/Src/main.c **** 
 324              		.loc 1 176 0
 325 0030 0293     		str	r3, [sp, #8]
 326 0032 1B49     		ldr	r1, .L19+4
 327 0034 0A68     		ldr	r2, [r1]
 328 0036 22F44042 		bic	r2, r2, #49152
 329 003a 42F40042 		orr	r2, r2, #32768
 330 003e 0A60     		str	r2, [r1]
 331 0040 0A68     		ldr	r2, [r1]
 332 0042 02F44042 		and	r2, r2, #49152
 333 0046 0292     		str	r2, [sp, #8]
 334 0048 029A     		ldr	r2, [sp, #8]
 335              	.LBE11:
 181:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/cclXBdsf.s 			page 15


 336              		.loc 1 181 0
 337 004a 0221     		movs	r1, #2
 338 004c 0891     		str	r1, [sp, #32]
 182:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 339              		.loc 1 182 0
 340 004e 0122     		movs	r2, #1
 341 0050 0B92     		str	r2, [sp, #44]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 342              		.loc 1 183 0
 343 0052 1022     		movs	r2, #16
 344 0054 0C92     		str	r2, [sp, #48]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 345              		.loc 1 184 0
 346 0056 0E91     		str	r1, [sp, #56]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 347              		.loc 1 185 0
 348 0058 0F93     		str	r3, [sp, #60]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 349              		.loc 1 186 0
 350 005a 1092     		str	r2, [sp, #64]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 351              		.loc 1 187 0
 352 005c 4FF4A873 		mov	r3, #336
 353 0060 1193     		str	r3, [sp, #68]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 354              		.loc 1 188 0
 355 0062 0423     		movs	r3, #4
 356 0064 1293     		str	r3, [sp, #72]
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 357              		.loc 1 189 0
 358 0066 0723     		movs	r3, #7
 359 0068 1393     		str	r3, [sp, #76]
 190:Core/Src/main.c ****   {
 360              		.loc 1 190 0
 361 006a 08A8     		add	r0, sp, #32
 362 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 363              	.LVL10:
 364 0070 80B9     		cbnz	r0, .L17
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 365              		.loc 1 197 0
 366 0072 0F23     		movs	r3, #15
 367 0074 0393     		str	r3, [sp, #12]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 368              		.loc 1 199 0
 369 0076 0221     		movs	r1, #2
 370 0078 0491     		str	r1, [sp, #16]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 371              		.loc 1 200 0
 372 007a 0023     		movs	r3, #0
 373 007c 0593     		str	r3, [sp, #20]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 374              		.loc 1 201 0
 375 007e 4FF48052 		mov	r2, #4096
 376 0082 0692     		str	r2, [sp, #24]
 202:Core/Src/main.c **** 
 377              		.loc 1 202 0
 378 0084 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/cclXBdsf.s 			page 16


 204:Core/Src/main.c ****   {
 379              		.loc 1 204 0
 380 0086 03A8     		add	r0, sp, #12
 381 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 382              	.LVL11:
 383 008c 20B9     		cbnz	r0, .L18
 208:Core/Src/main.c **** 
 384              		.loc 1 208 0
 385 008e 15B0     		add	sp, sp, #84
 386              	.LCFI6:
 387              		.cfi_remember_state
 388              		.cfi_def_cfa_offset 4
 389              		@ sp needed
 390 0090 5DF804FB 		ldr	pc, [sp], #4
 391              	.L17:
 392              	.LCFI7:
 393              		.cfi_restore_state
 192:Core/Src/main.c ****   }
 394              		.loc 1 192 0
 395 0094 FFF7FEFF 		bl	Error_Handler
 396              	.LVL12:
 397              	.L18:
 206:Core/Src/main.c ****   }
 398              		.loc 1 206 0
 399 0098 FFF7FEFF 		bl	Error_Handler
 400              	.LVL13:
 401              	.L20:
 402              		.align	2
 403              	.L19:
 404 009c 00380240 		.word	1073887232
 405 00a0 00700040 		.word	1073770496
 406              		.cfi_endproc
 407              	.LFE132:
 409              		.section	.text.main,"ax",%progbits
 410              		.align	1
 411              		.global	main
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu fpv4-sp-d16
 417              	main:
 418              	.LFB131:
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 419              		.loc 1 68 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 72
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 424              	.LCFI8:
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 4, -24
 427              		.cfi_offset 5, -20
 428              		.cfi_offset 6, -16
 429              		.cfi_offset 7, -12
 430              		.cfi_offset 8, -8
 431              		.cfi_offset 14, -4
 432 0004 94B0     		sub	sp, sp, #80
ARM GAS  /tmp/cclXBdsf.s 			page 17


 433              	.LCFI9:
 434              		.cfi_def_cfa_offset 104
  76:Core/Src/main.c **** 
 435              		.loc 1 76 0
 436 0006 FFF7FEFF 		bl	HAL_Init
 437              	.LVL14:
  83:Core/Src/main.c **** 
 438              		.loc 1 83 0
 439 000a FFF7FEFF 		bl	SystemClock_Config
 440              	.LVL15:
  90:Core/Src/main.c ****   MX_USART2_UART_Init();
 441              		.loc 1 90 0
 442 000e FFF7FEFF 		bl	MX_GPIO_Init
 443              	.LVL16:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 444              		.loc 1 91 0
 445 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 446              	.LVL17:
  93:Core/Src/main.c **** 	serial_print("hello world!\n");
 447              		.loc 1 93 0
 448 0016 FFF7FEFF 		bl	ili9341_init
 449              	.LVL18:
  94:Core/Src/main.c **** 
 450              		.loc 1 94 0
 451 001a 7248     		ldr	r0, .L24
 452 001c FFF7FEFF 		bl	serial_print
 453              	.LVL19:
  97:Core/Src/main.c **** 
 454              		.loc 1 97 0
 455 0020 13A8     		add	r0, sp, #76
 456 0022 FFF7FEFF 		bl	ili9341_get_id4
 457              	.LVL20:
 101:Core/Src/main.c **** 
 458              		.loc 1 101 0
 459 0026 0320     		movs	r0, #3
 460 0028 FFF7FEFF 		bl	lcd_set_rotation
 461              	.LVL21:
 103:Core/Src/main.c **** 	char message[64] = "> Hello. My Name is Luyao Han. Great to meet you!";
 462              		.loc 1 103 0
 463 002c 4FF6FF70 		movw	r0, #65535
 464 0030 FFF7FEFF 		bl	lcd_clear_all
 465              	.LVL22:
 104:Core/Src/main.c **** 	lcd_write_message(message, 0, 10, 1, 0x001F, 0xFFFF);
 466              		.loc 1 104 0
 467 0034 03AC     		add	r4, sp, #12
 468 0036 6C4D     		ldr	r5, .L24+4
 469 0038 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 470 003a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 471 003c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 472 003e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 473 0040 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 474 0042 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 475 0044 2B68     		ldr	r3, [r5]
 476 0046 2380     		strh	r3, [r4]	@ movhi
 477 0048 0024     		movs	r4, #0
 478 004a CDF83E40 		str	r4, [sp, #62]	@ unaligned
 479 004e CDF84240 		str	r4, [sp, #66]	@ unaligned
ARM GAS  /tmp/cclXBdsf.s 			page 18


 480 0052 CDF84640 		str	r4, [sp, #70]	@ unaligned
 481 0056 ADF84A40 		strh	r4, [sp, #74]	@ movhi
 105:Core/Src/main.c **** 	
 482              		.loc 1 105 0
 483 005a 4FF6FF78 		movw	r8, #65535
 484 005e CDF80480 		str	r8, [sp, #4]
 485 0062 1F27     		movs	r7, #31
 486 0064 0097     		str	r7, [sp]
 487 0066 0123     		movs	r3, #1
 488 0068 0A22     		movs	r2, #10
 489 006a 2146     		mov	r1, r4
 490 006c 03A8     		add	r0, sp, #12
 491 006e FFF7FEFF 		bl	lcd_write_message
 492              	.LVL23:
 107:Core/Src/main.c **** 	lcd_write_message(message, 0, 20, 1, 0x001F, 0xFFFF);
 493              		.loc 1 107 0
 494 0072 03AD     		add	r5, sp, #12
 495 0074 5D4E     		ldr	r6, .L24+8
 496 0076 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 497 0078 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 498 007a 3368     		ldr	r3, [r6]
 499 007c 2B60     		str	r3, [r5]
 108:Core/Src/main.c **** 
 500              		.loc 1 108 0
 501 007e CDF80480 		str	r8, [sp, #4]
 502 0082 0097     		str	r7, [sp]
 503 0084 0123     		movs	r3, #1
 504 0086 1422     		movs	r2, #20
 505 0088 2146     		mov	r1, r4
 506 008a 03A8     		add	r0, sp, #12
 507 008c FFF7FEFF 		bl	lcd_write_message
 508              	.LVL24:
 115:Core/Src/main.c **** 	lcd_write_message(message, 0, 30, 1, 0x001F, 0xFFFF);
 509              		.loc 1 115 0
 510 0090 03AD     		add	r5, sp, #12
 511 0092 574E     		ldr	r6, .L24+12
 512 0094 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 513 0096 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 514 0098 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 515 009a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 516 009c 96E80300 		ldm	r6, {r0, r1}
 517 00a0 45F8040B 		str	r0, [r5], #4
 518 00a4 2970     		strb	r1, [r5]
 116:Core/Src/main.c ****   strcpy(message, "Some say in ice.");
 519              		.loc 1 116 0
 520 00a6 CDF80480 		str	r8, [sp, #4]
 521 00aa 0097     		str	r7, [sp]
 522 00ac 0123     		movs	r3, #1
 523 00ae 1E22     		movs	r2, #30
 524 00b0 2146     		mov	r1, r4
 525 00b2 03A8     		add	r0, sp, #12
 526 00b4 FFF7FEFF 		bl	lcd_write_message
 527              	.LVL25:
 117:Core/Src/main.c **** 	lcd_write_message(message, 0, 40, 1, 0x001F, 0xFFFF);
 528              		.loc 1 117 0
 529 00b8 03AD     		add	r5, sp, #12
 530 00ba 4E4E     		ldr	r6, .L24+16
ARM GAS  /tmp/cclXBdsf.s 			page 19


 531 00bc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 532 00be 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 533 00c0 3368     		ldr	r3, [r6]
 534 00c2 2B70     		strb	r3, [r5]
 118:Core/Src/main.c ****   strcpy(message, "From what Ive tasted of desire");
 535              		.loc 1 118 0
 536 00c4 CDF80480 		str	r8, [sp, #4]
 537 00c8 0097     		str	r7, [sp]
 538 00ca 0123     		movs	r3, #1
 539 00cc 2822     		movs	r2, #40
 540 00ce 2146     		mov	r1, r4
 541 00d0 03A8     		add	r0, sp, #12
 542 00d2 FFF7FEFF 		bl	lcd_write_message
 543              	.LVL26:
 119:Core/Src/main.c **** 	lcd_write_message(message, 0, 50, 1, 0x001F, 0xFFFF);
 544              		.loc 1 119 0
 545 00d6 03AD     		add	r5, sp, #12
 546 00d8 474E     		ldr	r6, .L24+20
 547 00da 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 548 00dc 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 549 00de 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 550 00e2 07C5     		stmia	r5!, {r0, r1, r2}
 551 00e4 25F8023B 		strh	r3, [r5], #2	@ movhi
 552 00e8 1B0C     		lsrs	r3, r3, #16
 553 00ea 2B70     		strb	r3, [r5]
 120:Core/Src/main.c ****   strcpy(message, "I hold with those who favour fire.");
 554              		.loc 1 120 0
 555 00ec CDF80480 		str	r8, [sp, #4]
 556 00f0 0097     		str	r7, [sp]
 557 00f2 0123     		movs	r3, #1
 558 00f4 3222     		movs	r2, #50
 559 00f6 2146     		mov	r1, r4
 560 00f8 03A8     		add	r0, sp, #12
 561 00fa FFF7FEFF 		bl	lcd_write_message
 562              	.LVL27:
 121:Core/Src/main.c **** 	lcd_write_message(message, 0, 60, 1, 0x001F, 0xFFFF);
 563              		.loc 1 121 0
 564 00fe 03AD     		add	r5, sp, #12
 565 0100 3E4E     		ldr	r6, .L24+24
 566 0102 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 567 0104 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 568 0106 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 569 0108 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 570 010a 3368     		ldr	r3, [r6]
 571 010c 25F8023B 		strh	r3, [r5], #2	@ movhi
 572 0110 1B0C     		lsrs	r3, r3, #16
 573 0112 2B70     		strb	r3, [r5]
 122:Core/Src/main.c ****   strcpy(message, "But if it had to perish twice,");
 574              		.loc 1 122 0
 575 0114 CDF80480 		str	r8, [sp, #4]
 576 0118 0097     		str	r7, [sp]
 577 011a 0123     		movs	r3, #1
 578 011c 3C22     		movs	r2, #60
 579 011e 2146     		mov	r1, r4
 580 0120 03A8     		add	r0, sp, #12
 581 0122 FFF7FEFF 		bl	lcd_write_message
 582              	.LVL28:
ARM GAS  /tmp/cclXBdsf.s 			page 20


 123:Core/Src/main.c **** 	lcd_write_message(message, 0, 70, 1, 0x001F, 0xFFFF);
 583              		.loc 1 123 0
 584 0126 03AD     		add	r5, sp, #12
 585 0128 354E     		ldr	r6, .L24+28
 586 012a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 587 012c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 588 012e 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 589 0132 07C5     		stmia	r5!, {r0, r1, r2}
 590 0134 25F8023B 		strh	r3, [r5], #2	@ movhi
 591 0138 1B0C     		lsrs	r3, r3, #16
 592 013a 2B70     		strb	r3, [r5]
 124:Core/Src/main.c ****   strcpy(message, "I think I know enough of hate");
 593              		.loc 1 124 0
 594 013c CDF80480 		str	r8, [sp, #4]
 595 0140 0097     		str	r7, [sp]
 596 0142 0123     		movs	r3, #1
 597 0144 4622     		movs	r2, #70
 598 0146 2146     		mov	r1, r4
 599 0148 03A8     		add	r0, sp, #12
 600 014a FFF7FEFF 		bl	lcd_write_message
 601              	.LVL29:
 125:Core/Src/main.c **** 	lcd_write_message(message, 0, 80, 1, 0x001F, 0xFFFF);
 602              		.loc 1 125 0
 603 014e 03AD     		add	r5, sp, #12
 604 0150 2C4E     		ldr	r6, .L24+32
 605 0152 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 606 0154 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 607 0156 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 608 015a 07C5     		stmia	r5!, {r0, r1, r2}
 609 015c 2B80     		strh	r3, [r5]	@ movhi
 126:Core/Src/main.c ****   strcpy(message, "To say that for destruction ice");
 610              		.loc 1 126 0
 611 015e CDF80480 		str	r8, [sp, #4]
 612 0162 0097     		str	r7, [sp]
 613 0164 0123     		movs	r3, #1
 614 0166 5022     		movs	r2, #80
 615 0168 2146     		mov	r1, r4
 616 016a 03A8     		add	r0, sp, #12
 617 016c FFF7FEFF 		bl	lcd_write_message
 618              	.LVL30:
 127:Core/Src/main.c **** 	lcd_write_message(message, 0, 90, 1, 0x001F, 0xFFFF);
 619              		.loc 1 127 0
 620 0170 03AD     		add	r5, sp, #12
 621 0172 254E     		ldr	r6, .L24+36
 622 0174 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 623 0176 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 624 0178 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 625 017c 85E80F00 		stm	r5, {r0, r1, r2, r3}
 128:Core/Src/main.c ****   strcpy(message, "Is also great");
 626              		.loc 1 128 0
 627 0180 CDF80480 		str	r8, [sp, #4]
 628 0184 0097     		str	r7, [sp]
 629 0186 0123     		movs	r3, #1
 630 0188 5A22     		movs	r2, #90
 631 018a 2146     		mov	r1, r4
 632 018c 03A8     		add	r0, sp, #12
 633 018e FFF7FEFF 		bl	lcd_write_message
ARM GAS  /tmp/cclXBdsf.s 			page 21


 634              	.LVL31:
 129:Core/Src/main.c **** 	lcd_write_message(message, 0, 100, 1, 0x001F, 0xFFFF);
 635              		.loc 1 129 0
 636 0192 1E4B     		ldr	r3, .L24+40
 637 0194 03AD     		add	r5, sp, #12
 638 0196 0FCB     		ldm	r3, {r0, r1, r2, r3}
 639 0198 07C5     		stmia	r5!, {r0, r1, r2}
 640 019a 2B80     		strh	r3, [r5]	@ movhi
 130:Core/Src/main.c ****   strcpy(message, "And would suffice.");
 641              		.loc 1 130 0
 642 019c CDF80480 		str	r8, [sp, #4]
 643 01a0 0097     		str	r7, [sp]
 644 01a2 0123     		movs	r3, #1
 645 01a4 6422     		movs	r2, #100
 646 01a6 2146     		mov	r1, r4
 647 01a8 03A8     		add	r0, sp, #12
 648 01aa FFF7FEFF 		bl	lcd_write_message
 649              	.LVL32:
 131:Core/Src/main.c **** 	lcd_write_message(message, 0, 110, 1, 0x001F, 0xFFFF);
 650              		.loc 1 131 0
 651 01ae 03AD     		add	r5, sp, #12
 652 01b0 174E     		ldr	r6, .L24+44
 653 01b2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 654 01b4 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 655 01b6 3368     		ldr	r3, [r6]
 656 01b8 25F8023B 		strh	r3, [r5], #2	@ movhi
 657 01bc 1B0C     		lsrs	r3, r3, #16
 658 01be 2B70     		strb	r3, [r5]
 132:Core/Src/main.c **** 
 659              		.loc 1 132 0
 660 01c0 CDF80480 		str	r8, [sp, #4]
 661 01c4 0097     		str	r7, [sp]
 662 01c6 0123     		movs	r3, #1
 663 01c8 6E22     		movs	r2, #110
 664 01ca 2146     		mov	r1, r4
 665 01cc 03A8     		add	r0, sp, #12
 666 01ce FFF7FEFF 		bl	lcd_write_message
 667              	.LVL33:
 668              	.L22:
 140:Core/Src/main.c **** 		lcd_clear_all(0xFFFF);
 669              		.loc 1 140 0 discriminator 1
 670 01d2 0020     		movs	r0, #0
 671 01d4 FFF7FEFF 		bl	lcd_clear_all
 672              	.LVL34:
 141:Core/Src/main.c **** 		// lcd_clear_all(0x001F);
 673              		.loc 1 141 0 discriminator 1
 674 01d8 4FF6FF70 		movw	r0, #65535
 675 01dc FFF7FEFF 		bl	lcd_clear_all
 676              	.LVL35:
 677 01e0 F7E7     		b	.L22
 678              	.L25:
 679 01e2 00BF     		.align	2
 680              	.L24:
 681 01e4 00000000 		.word	.LC0
 682 01e8 00000000 		.word	.LANCHOR0
 683 01ec 10000000 		.word	.LC2
 684 01f0 24000000 		.word	.LC3
ARM GAS  /tmp/cclXBdsf.s 			page 22


 685 01f4 4C000000 		.word	.LC4
 686 01f8 60000000 		.word	.LC5
 687 01fc 80000000 		.word	.LC6
 688 0200 A4000000 		.word	.LC7
 689 0204 C4000000 		.word	.LC8
 690 0208 E4000000 		.word	.LC9
 691 020c 04010000 		.word	.LC10
 692 0210 14010000 		.word	.LC11
 693              		.cfi_endproc
 694              	.LFE131:
 696              		.comm	huart2,68,4
 697              		.section	.rodata
 698              		.align	2
 699              		.set	.LANCHOR0,. + 0
 700              	.LC1:
 701 0000 3E204865 		.ascii	"> Hello. My Name is Luyao Han. Great to meet you!\000"
 701      6C6C6F2E 
 701      204D7920 
 701      4E616D65 
 701      20697320 
 702 0032 00000000 		.space	14
 702      00000000 
 702      00000000 
 702      0000
 703              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 704              		.align	2
 705              	.LC0:
 706 0000 68656C6C 		.ascii	"hello world!\012\000"
 706      6F20776F 
 706      726C6421 
 706      0A00
 707 000e 0000     		.space	2
 708              	.LC2:
 709 0010 3E205768 		.ascii	"> What's your name?\000"
 709      61742773 
 709      20796F75 
 709      72206E61 
 709      6D653F00 
 710              	.LC3:
 711 0024 536F6D65 		.ascii	"Some say the world will end in fire,\000"
 711      20736179 
 711      20746865 
 711      20776F72 
 711      6C642077 
 712 0049 000000   		.space	3
 713              	.LC4:
 714 004c 536F6D65 		.ascii	"Some say in ice.\000"
 714      20736179 
 714      20696E20 
 714      6963652E 
 714      00
 715 005d 000000   		.space	3
 716              	.LC5:
 717 0060 46726F6D 		.ascii	"From what Ive tasted of desire\000"
 717      20776861 
 717      74204976 
 717      65207461 
ARM GAS  /tmp/cclXBdsf.s 			page 23


 717      73746564 
 718 007f 00       		.space	1
 719              	.LC6:
 720 0080 4920686F 		.ascii	"I hold with those who favour fire.\000"
 720      6C642077 
 720      69746820 
 720      74686F73 
 720      65207768 
 721 00a3 00       		.space	1
 722              	.LC7:
 723 00a4 42757420 		.ascii	"But if it had to perish twice,\000"
 723      69662069 
 723      74206861 
 723      6420746F 
 723      20706572 
 724 00c3 00       		.space	1
 725              	.LC8:
 726 00c4 49207468 		.ascii	"I think I know enough of hate\000"
 726      696E6B20 
 726      49206B6E 
 726      6F772065 
 726      6E6F7567 
 727 00e2 0000     		.space	2
 728              	.LC9:
 729 00e4 546F2073 		.ascii	"To say that for destruction ice\000"
 729      61792074 
 729      68617420 
 729      666F7220 
 729      64657374 
 730              	.LC10:
 731 0104 49732061 		.ascii	"Is also great\000"
 731      6C736F20 
 731      67726561 
 731      7400
 732 0112 0000     		.space	2
 733              	.LC11:
 734 0114 416E6420 		.ascii	"And would suffice.\000"
 734      776F756C 
 734      64207375 
 734      66666963 
 734      652E00
 735              		.text
 736              	.Letext0:
 737              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 738              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 739              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 740              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 741              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 742              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 743              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 744              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 745              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 746              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 747              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 748              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 749              		.file 15 "/usr/include/newlib/sys/lock.h"
 750              		.file 16 "/usr/include/newlib/sys/_types.h"
ARM GAS  /tmp/cclXBdsf.s 			page 24


 751              		.file 17 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 752              		.file 18 "/usr/include/newlib/sys/reent.h"
 753              		.file 19 "libs/ili9341/ili9341.h"
 754              		.file 20 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/cclXBdsf.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclXBdsf.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cclXBdsf.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cclXBdsf.s:181    .text.MX_GPIO_Init:00000000000000e8 $d
     /tmp/cclXBdsf.s:189    .text.Error_Handler:0000000000000000 $t
     /tmp/cclXBdsf.s:196    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cclXBdsf.s:222    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cclXBdsf.s:228    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cclXBdsf.s:272    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart2
     /tmp/cclXBdsf.s:278    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclXBdsf.s:285    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclXBdsf.s:404    .text.SystemClock_Config:000000000000009c $d
     /tmp/cclXBdsf.s:410    .text.main:0000000000000000 $t
     /tmp/cclXBdsf.s:417    .text.main:0000000000000000 main
     /tmp/cclXBdsf.s:681    .text.main:00000000000001e4 $d
     /tmp/cclXBdsf.s:698    .rodata:0000000000000000 $d
     /tmp/cclXBdsf.s:704    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ili9341_init
serial_print
ili9341_get_id4
lcd_set_rotation
lcd_clear_all
lcd_write_message
