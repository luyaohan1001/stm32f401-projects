ARM GAS  /tmp/ccvAwqLn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB134:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "ili9341.h"
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccvAwqLn.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c ****  UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief  The application entry point.
  65:Core/Src/main.c ****   * @retval int
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** int main(void)
  68:Core/Src/main.c **** {
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccvAwqLn.s 			page 3


  90:Core/Src/main.c ****   MX_GPIO_Init();
  91:Core/Src/main.c ****   MX_USART2_UART_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 	ili9341_init();
  94:Core/Src/main.c **** 	serial_print("hello world!\n");
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** 	uint8_t id4[4];
  97:Core/Src/main.c **** 	ili9341_read_id4(id4);
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Infinite loop */
 103:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 104:Core/Src/main.c ****   while (1)
 105:Core/Src/main.c ****   {
 106:Core/Src/main.c **** 		LCD_Clear(0x001F);
 107:Core/Src/main.c **** 		LCD_Clear(0x07E0);
 108:Core/Src/main.c **** 		LCD_Clear(0xF800);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     for(int i=0;i<500;i++)
 111:Core/Src/main.c ****     {
 112:Core/Src/main.c ****       Rect(rand() % 300,rand() % 300,rand() % 300,rand() % 300,rand() % 65535); // rectangle at x, 
 113:Core/Src/main.c ****     }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     for(int i=0;i<10;i++)
 116:Core/Src/main.c ****     { 
 117:Core/Src/main.c ****       Rectf(rand() % 300,rand() % 300,rand() % 300,rand() % 300,rand() % 65535); // rectangle at x,
 118:Core/Src/main.c ****     }
 119:Core/Src/main.c ****     /* USER CODE END WHILE */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c ****   /* USER CODE END 3 */
 124:Core/Src/main.c **** }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /**
 127:Core/Src/main.c ****   * @brief System Clock Configuration
 128:Core/Src/main.c ****   * @retval None
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c **** void SystemClock_Config(void)
 131:Core/Src/main.c **** {
 132:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 138:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 141:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccvAwqLn.s 			page 4


 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 161:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 167:Core/Src/main.c ****   {
 168:Core/Src/main.c ****     Error_Handler();
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief USART2 Initialization Function
 174:Core/Src/main.c ****   * @param None
 175:Core/Src/main.c ****   * @retval None
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 178:Core/Src/main.c **** {
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 187:Core/Src/main.c ****   huart2.Instance = USART2;
 188:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 189:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 190:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 191:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 192:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 193:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 194:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 195:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** }
ARM GAS  /tmp/ccvAwqLn.s 			page 5


 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief GPIO Initialization Function
 207:Core/Src/main.c ****   * @param None
 208:Core/Src/main.c ****   * @retval None
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c **** static void MX_GPIO_Init(void)
 211:Core/Src/main.c **** {
  27              		.loc 1 211 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8AB0     		sub	sp, sp, #40
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 64
 212:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 212 0
  44 0006 0024     		movs	r4, #0
  45 0008 0594     		str	r4, [sp, #20]
  46 000a 0694     		str	r4, [sp, #24]
  47 000c 0794     		str	r4, [sp, #28]
  48 000e 0894     		str	r4, [sp, #32]
  49 0010 0994     		str	r4, [sp, #36]
  50              	.LBB4:
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 215:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 215 0
  52 0012 0194     		str	r4, [sp, #4]
  53 0014 344B     		ldr	r3, .L3
  54 0016 1A6B     		ldr	r2, [r3, #48]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 1A63     		str	r2, [r3, #48]
  57 001e 1A6B     		ldr	r2, [r3, #48]
  58 0020 02F00402 		and	r2, r2, #4
  59 0024 0192     		str	r2, [sp, #4]
  60 0026 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              	.LBB5:
 216:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  63              		.loc 1 216 0
  64 0028 0294     		str	r4, [sp, #8]
  65 002a 1A6B     		ldr	r2, [r3, #48]
  66 002c 42F08002 		orr	r2, r2, #128
  67 0030 1A63     		str	r2, [r3, #48]
  68 0032 1A6B     		ldr	r2, [r3, #48]
  69 0034 02F08002 		and	r2, r2, #128
  70 0038 0292     		str	r2, [sp, #8]
ARM GAS  /tmp/ccvAwqLn.s 			page 6


  71 003a 029A     		ldr	r2, [sp, #8]
  72              	.LBE5:
  73              	.LBB6:
 217:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  74              		.loc 1 217 0
  75 003c 0394     		str	r4, [sp, #12]
  76 003e 1A6B     		ldr	r2, [r3, #48]
  77 0040 42F00102 		orr	r2, r2, #1
  78 0044 1A63     		str	r2, [r3, #48]
  79 0046 1A6B     		ldr	r2, [r3, #48]
  80 0048 02F00102 		and	r2, r2, #1
  81 004c 0392     		str	r2, [sp, #12]
  82 004e 039A     		ldr	r2, [sp, #12]
  83              	.LBE6:
  84              	.LBB7:
 218:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  85              		.loc 1 218 0
  86 0050 0494     		str	r4, [sp, #16]
  87 0052 1A6B     		ldr	r2, [r3, #48]
  88 0054 42F00202 		orr	r2, r2, #2
  89 0058 1A63     		str	r2, [r3, #48]
  90 005a 1B6B     		ldr	r3, [r3, #48]
  91 005c 03F00203 		and	r3, r3, #2
  92 0060 0493     		str	r3, [sp, #16]
  93 0062 049B     		ldr	r3, [sp, #16]
  94              	.LBE7:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  95              		.loc 1 221 0
  96 0064 214E     		ldr	r6, .L3+4
  97 0066 2246     		mov	r2, r4
  98 0068 0321     		movs	r1, #3
  99 006a 3046     		mov	r0, r6
 100 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 224:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|LD2_Pin
 102              		.loc 1 224 0
 103 0070 DFF88080 		ldr	r8, .L3+12
 104 0074 2246     		mov	r2, r4
 105 0076 40F23351 		movw	r1, #1331
 106 007a 4046     		mov	r0, r8
 107 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 225:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_10, GPIO_PIN_RESET);
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 228:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_3|GPIO_PIN_4
 109              		.loc 1 228 0
 110 0080 1B4F     		ldr	r7, .L3+8
 111 0082 2246     		mov	r2, r4
 112 0084 40F23941 		movw	r1, #1081
 113 0088 3846     		mov	r0, r7
 114 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL2:
ARM GAS  /tmp/ccvAwqLn.s 			page 7


 229:Core/Src/main.c ****                           |GPIO_PIN_5, GPIO_PIN_RESET);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 232:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 116              		.loc 1 232 0
 117 008e 4FF40053 		mov	r3, #8192
 118 0092 0593     		str	r3, [sp, #20]
 233:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 119              		.loc 1 233 0
 120 0094 4FF40413 		mov	r3, #2162688
 121 0098 0693     		str	r3, [sp, #24]
 234:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 234 0
 123 009a 0794     		str	r4, [sp, #28]
 235:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 124              		.loc 1 235 0
 125 009c 05A9     		add	r1, sp, #20
 126 009e 3046     		mov	r0, r6
 127 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL3:
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /*Configure GPIO pins : PC0 PC1 */
 238:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 129              		.loc 1 238 0
 130 00a4 0323     		movs	r3, #3
 131 00a6 0593     		str	r3, [sp, #20]
 239:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 239 0
 133 00a8 0125     		movs	r5, #1
 134 00aa 0695     		str	r5, [sp, #24]
 240:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 240 0
 136 00ac 0794     		str	r4, [sp, #28]
 241:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137              		.loc 1 241 0
 138 00ae 0894     		str	r4, [sp, #32]
 242:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 139              		.loc 1 242 0
 140 00b0 05A9     		add	r1, sp, #20
 141 00b2 3046     		mov	r0, r6
 142 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL4:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA4 LD2_Pin
 245:Core/Src/main.c ****                            PA8 PA10 */
 246:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|LD2_Pin
 144              		.loc 1 246 0
 145 00b8 40F23353 		movw	r3, #1331
 146 00bc 0593     		str	r3, [sp, #20]
 247:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_10;
 248:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 147              		.loc 1 248 0
 148 00be 0695     		str	r5, [sp, #24]
 249:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 249 0
 150 00c0 0794     		str	r4, [sp, #28]
 250:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccvAwqLn.s 			page 8


 151              		.loc 1 250 0
 152 00c2 0894     		str	r4, [sp, #32]
 251:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 153              		.loc 1 251 0
 154 00c4 05A9     		add	r1, sp, #20
 155 00c6 4046     		mov	r0, r8
 156 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL5:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB10 PB3 PB4
 254:Core/Src/main.c ****                            PB5 */
 255:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_3|GPIO_PIN_4
 158              		.loc 1 255 0
 159 00cc 40F23943 		movw	r3, #1081
 160 00d0 0593     		str	r3, [sp, #20]
 256:Core/Src/main.c ****                           |GPIO_PIN_5;
 257:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 161              		.loc 1 257 0
 162 00d2 0695     		str	r5, [sp, #24]
 258:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 258 0
 164 00d4 0794     		str	r4, [sp, #28]
 259:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 165              		.loc 1 259 0
 166 00d6 0894     		str	r4, [sp, #32]
 260:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 167              		.loc 1 260 0
 168 00d8 05A9     		add	r1, sp, #20
 169 00da 3846     		mov	r0, r7
 170 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL6:
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** }
 172              		.loc 1 262 0
 173 00e0 0AB0     		add	sp, sp, #40
 174              	.LCFI2:
 175              		.cfi_def_cfa_offset 24
 176              		@ sp needed
 177 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 178              	.L4:
 179 00e6 00BF     		.align	2
 180              	.L3:
 181 00e8 00380240 		.word	1073887232
 182 00ec 00080240 		.word	1073874944
 183 00f0 00040240 		.word	1073873920
 184 00f4 00000240 		.word	1073872896
 185              		.cfi_endproc
 186              	.LFE134:
 188              		.section	.text.Error_Handler,"ax",%progbits
 189              		.align	1
 190              		.global	Error_Handler
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	Error_Handler:
 197              	.LFB135:
ARM GAS  /tmp/ccvAwqLn.s 			page 9


 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /* USER CODE END 4 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /**
 269:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 270:Core/Src/main.c ****   * @retval None
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c **** void Error_Handler(void)
 273:Core/Src/main.c **** {
 198              		.loc 1 273 0
 199              		.cfi_startproc
 200              		@ Volatile: function does not return.
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204              	.LBB8:
 205              	.LBB9:
 206              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccvAwqLn.s 			page 10


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/ccvAwqLn.s 			page 11


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 207              		.loc 2 142 0
 208              		.syntax unified
 209              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 210 0000 72B6     		cpsid i
 211              	@ 0 "" 2
 212              		.thumb
 213              		.syntax unified
 214              	.L6:
 215 0002 FEE7     		b	.L6
ARM GAS  /tmp/ccvAwqLn.s 			page 12


 216              	.LBE9:
 217              	.LBE8:
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 222              		.align	1
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	MX_USART2_UART_Init:
 229              	.LFB133:
 178:Core/Src/main.c **** 
 230              		.loc 1 178 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 187:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 239              		.loc 1 187 0
 240 0002 0A48     		ldr	r0, .L11
 241 0004 0A4B     		ldr	r3, .L11+4
 242 0006 0360     		str	r3, [r0]
 188:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 243              		.loc 1 188 0
 244 0008 4FF4E133 		mov	r3, #115200
 245 000c 4360     		str	r3, [r0, #4]
 189:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 246              		.loc 1 189 0
 247 000e 0023     		movs	r3, #0
 248 0010 8360     		str	r3, [r0, #8]
 190:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 249              		.loc 1 190 0
 250 0012 C360     		str	r3, [r0, #12]
 191:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 251              		.loc 1 191 0
 252 0014 0361     		str	r3, [r0, #16]
 192:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 253              		.loc 1 192 0
 254 0016 0C22     		movs	r2, #12
 255 0018 4261     		str	r2, [r0, #20]
 193:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 256              		.loc 1 193 0
 257 001a 8361     		str	r3, [r0, #24]
 194:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 258              		.loc 1 194 0
 259 001c C361     		str	r3, [r0, #28]
 195:Core/Src/main.c ****   {
 260              		.loc 1 195 0
 261 001e FFF7FEFF 		bl	HAL_UART_Init
 262              	.LVL7:
 263 0022 00B9     		cbnz	r0, .L10
 264 0024 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccvAwqLn.s 			page 13


 265              	.L10:
 197:Core/Src/main.c ****   }
 266              		.loc 1 197 0
 267 0026 FFF7FEFF 		bl	Error_Handler
 268              	.LVL8:
 269              	.L12:
 270 002a 00BF     		.align	2
 271              	.L11:
 272 002c 00000000 		.word	huart2
 273 0030 00440040 		.word	1073759232
 274              		.cfi_endproc
 275              	.LFE133:
 277              		.section	.text.SystemClock_Config,"ax",%progbits
 278              		.align	1
 279              		.global	SystemClock_Config
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu fpv4-sp-d16
 285              	SystemClock_Config:
 286              	.LFB132:
 131:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 287              		.loc 1 131 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 80
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 00B5     		push	{lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 14, -4
 295 0002 95B0     		sub	sp, sp, #84
 296              	.LCFI5:
 297              		.cfi_def_cfa_offset 88
 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 298              		.loc 1 132 0
 299 0004 3022     		movs	r2, #48
 300 0006 0021     		movs	r1, #0
 301 0008 08A8     		add	r0, sp, #32
 302 000a FFF7FEFF 		bl	memset
 303              	.LVL9:
 133:Core/Src/main.c **** 
 304              		.loc 1 133 0
 305 000e 0023     		movs	r3, #0
 306 0010 0393     		str	r3, [sp, #12]
 307 0012 0493     		str	r3, [sp, #16]
 308 0014 0593     		str	r3, [sp, #20]
 309 0016 0693     		str	r3, [sp, #24]
 310 0018 0793     		str	r3, [sp, #28]
 311              	.LBB10:
 137:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 312              		.loc 1 137 0
 313 001a 0193     		str	r3, [sp, #4]
 314 001c 1F4A     		ldr	r2, .L19
 315 001e 116C     		ldr	r1, [r2, #64]
 316 0020 41F08051 		orr	r1, r1, #268435456
 317 0024 1164     		str	r1, [r2, #64]
 318 0026 126C     		ldr	r2, [r2, #64]
ARM GAS  /tmp/ccvAwqLn.s 			page 14


 319 0028 02F08052 		and	r2, r2, #268435456
 320 002c 0192     		str	r2, [sp, #4]
 321 002e 019A     		ldr	r2, [sp, #4]
 322              	.LBE10:
 323              	.LBB11:
 138:Core/Src/main.c **** 
 324              		.loc 1 138 0
 325 0030 0293     		str	r3, [sp, #8]
 326 0032 1B49     		ldr	r1, .L19+4
 327 0034 0A68     		ldr	r2, [r1]
 328 0036 22F44042 		bic	r2, r2, #49152
 329 003a 42F40042 		orr	r2, r2, #32768
 330 003e 0A60     		str	r2, [r1]
 331 0040 0A68     		ldr	r2, [r1]
 332 0042 02F44042 		and	r2, r2, #49152
 333 0046 0292     		str	r2, [sp, #8]
 334 0048 029A     		ldr	r2, [sp, #8]
 335              	.LBE11:
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 336              		.loc 1 143 0
 337 004a 0221     		movs	r1, #2
 338 004c 0891     		str	r1, [sp, #32]
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 339              		.loc 1 144 0
 340 004e 0122     		movs	r2, #1
 341 0050 0B92     		str	r2, [sp, #44]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 342              		.loc 1 145 0
 343 0052 1022     		movs	r2, #16
 344 0054 0C92     		str	r2, [sp, #48]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 345              		.loc 1 146 0
 346 0056 0E91     		str	r1, [sp, #56]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 347              		.loc 1 147 0
 348 0058 0F93     		str	r3, [sp, #60]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 349              		.loc 1 148 0
 350 005a 1092     		str	r2, [sp, #64]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 351              		.loc 1 149 0
 352 005c 4FF4A873 		mov	r3, #336
 353 0060 1193     		str	r3, [sp, #68]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 354              		.loc 1 150 0
 355 0062 0423     		movs	r3, #4
 356 0064 1293     		str	r3, [sp, #72]
 151:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 357              		.loc 1 151 0
 358 0066 0723     		movs	r3, #7
 359 0068 1393     		str	r3, [sp, #76]
 152:Core/Src/main.c ****   {
 360              		.loc 1 152 0
 361 006a 08A8     		add	r0, sp, #32
 362 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 363              	.LVL10:
 364 0070 80B9     		cbnz	r0, .L17
ARM GAS  /tmp/ccvAwqLn.s 			page 15


 159:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 365              		.loc 1 159 0
 366 0072 0F23     		movs	r3, #15
 367 0074 0393     		str	r3, [sp, #12]
 161:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 368              		.loc 1 161 0
 369 0076 0221     		movs	r1, #2
 370 0078 0491     		str	r1, [sp, #16]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 371              		.loc 1 162 0
 372 007a 0023     		movs	r3, #0
 373 007c 0593     		str	r3, [sp, #20]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 374              		.loc 1 163 0
 375 007e 4FF48052 		mov	r2, #4096
 376 0082 0692     		str	r2, [sp, #24]
 164:Core/Src/main.c **** 
 377              		.loc 1 164 0
 378 0084 0793     		str	r3, [sp, #28]
 166:Core/Src/main.c ****   {
 379              		.loc 1 166 0
 380 0086 03A8     		add	r0, sp, #12
 381 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 382              	.LVL11:
 383 008c 20B9     		cbnz	r0, .L18
 170:Core/Src/main.c **** 
 384              		.loc 1 170 0
 385 008e 15B0     		add	sp, sp, #84
 386              	.LCFI6:
 387              		.cfi_remember_state
 388              		.cfi_def_cfa_offset 4
 389              		@ sp needed
 390 0090 5DF804FB 		ldr	pc, [sp], #4
 391              	.L17:
 392              	.LCFI7:
 393              		.cfi_restore_state
 154:Core/Src/main.c ****   }
 394              		.loc 1 154 0
 395 0094 FFF7FEFF 		bl	Error_Handler
 396              	.LVL12:
 397              	.L18:
 168:Core/Src/main.c ****   }
 398              		.loc 1 168 0
 399 0098 FFF7FEFF 		bl	Error_Handler
 400              	.LVL13:
 401              	.L20:
 402              		.align	2
 403              	.L19:
 404 009c 00380240 		.word	1073887232
 405 00a0 00700040 		.word	1073770496
 406              		.cfi_endproc
 407              	.LFE132:
 409              		.section	.text.main,"ax",%progbits
 410              		.align	1
 411              		.global	main
 412              		.syntax unified
 413              		.thumb
ARM GAS  /tmp/ccvAwqLn.s 			page 16


 414              		.thumb_func
 415              		.fpu fpv4-sp-d16
 417              	main:
 418              	.LFB131:
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 419              		.loc 1 68 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 424              	.LCFI8:
 425              		.cfi_def_cfa_offset 28
 426              		.cfi_offset 4, -28
 427              		.cfi_offset 5, -24
 428              		.cfi_offset 6, -20
 429              		.cfi_offset 7, -16
 430              		.cfi_offset 8, -12
 431              		.cfi_offset 9, -8
 432              		.cfi_offset 14, -4
 433 0004 85B0     		sub	sp, sp, #20
 434              	.LCFI9:
 435              		.cfi_def_cfa_offset 48
  76:Core/Src/main.c **** 
 436              		.loc 1 76 0
 437 0006 FFF7FEFF 		bl	HAL_Init
 438              	.LVL14:
  83:Core/Src/main.c **** 
 439              		.loc 1 83 0
 440 000a FFF7FEFF 		bl	SystemClock_Config
 441              	.LVL15:
  90:Core/Src/main.c ****   MX_USART2_UART_Init();
 442              		.loc 1 90 0
 443 000e FFF7FEFF 		bl	MX_GPIO_Init
 444              	.LVL16:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 445              		.loc 1 91 0
 446 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 447              	.LVL17:
  93:Core/Src/main.c **** 	serial_print("hello world!\n");
 448              		.loc 1 93 0
 449 0016 FFF7FEFF 		bl	ili9341_init
 450              	.LVL18:
  94:Core/Src/main.c **** 
 451              		.loc 1 94 0
 452 001a 4B48     		ldr	r0, .L28
 453 001c FFF7FEFF 		bl	serial_print
 454              	.LVL19:
  97:Core/Src/main.c **** 
 455              		.loc 1 97 0
 456 0020 03A8     		add	r0, sp, #12
 457 0022 FFF7FEFF 		bl	ili9341_read_id4
 458              	.LVL20:
 459 0026 80E0     		b	.L26
 460              	.LVL21:
 461              	.L23:
 462              	.LBB12:
 112:Core/Src/main.c ****     }
ARM GAS  /tmp/ccvAwqLn.s 			page 17


 463              		.loc 1 112 0 discriminator 3
 464 0028 FFF7FEFF 		bl	rand
 465              	.LVL22:
 466 002c 474C     		ldr	r4, .L28+4
 467 002e 84FB0023 		smull	r2, r3, r4, r0
 468 0032 C517     		asrs	r5, r0, #31
 469 0034 C5EB6315 		rsb	r5, r5, r3, asr #5
 470 0038 4FF49679 		mov	r9, #300
 471 003c 09FB1505 		mls	r5, r9, r5, r0
 472 0040 FFF7FEFF 		bl	rand
 473              	.LVL23:
 474 0044 84FB0023 		smull	r2, r3, r4, r0
 475 0048 C617     		asrs	r6, r0, #31
 476 004a C6EB6316 		rsb	r6, r6, r3, asr #5
 477 004e 09FB1606 		mls	r6, r9, r6, r0
 478 0052 FFF7FEFF 		bl	rand
 479              	.LVL24:
 480 0056 84FB0023 		smull	r2, r3, r4, r0
 481 005a C717     		asrs	r7, r0, #31
 482 005c C7EB6317 		rsb	r7, r7, r3, asr #5
 483 0060 09FB1707 		mls	r7, r9, r7, r0
 484 0064 FFF7FEFF 		bl	rand
 485              	.LVL25:
 486 0068 84FB0034 		smull	r3, r4, r4, r0
 487 006c C317     		asrs	r3, r0, #31
 488 006e C3EB6414 		rsb	r4, r3, r4, asr #5
 489 0072 09FB1404 		mls	r4, r9, r4, r0
 490 0076 FFF7FEFF 		bl	rand
 491              	.LVL26:
 492 007a 354B     		ldr	r3, .L28+8
 493 007c 83FB0023 		smull	r2, r3, r3, r0
 494 0080 1A18     		adds	r2, r3, r0
 495 0082 C317     		asrs	r3, r0, #31
 496 0084 C3EBE233 		rsb	r3, r3, r2, asr #15
 497 0088 C3EB0343 		rsb	r3, r3, r3, lsl #16
 498 008c C31A     		subs	r3, r0, r3
 499 008e 0093     		str	r3, [sp]
 500 0090 2346     		mov	r3, r4
 501 0092 3A46     		mov	r2, r7
 502 0094 3146     		mov	r1, r6
 503 0096 2846     		mov	r0, r5
 504 0098 FFF7FEFF 		bl	Rect
 505              	.LVL27:
 110:Core/Src/main.c ****     {
 506              		.loc 1 110 0 discriminator 3
 507 009c 08F10108 		add	r8, r8, #1
 508              	.LVL28:
 509              	.L22:
 110:Core/Src/main.c ****     {
 510              		.loc 1 110 0 is_stmt 0 discriminator 1
 511 00a0 B8F5FA7F 		cmp	r8, #500
 512 00a4 C0DB     		blt	.L23
 513 00a6 4FF00008 		mov	r8, #0
 514              	.LVL29:
 515 00aa 3BE0     		b	.L24
 516              	.LVL30:
 517              	.L25:
ARM GAS  /tmp/ccvAwqLn.s 			page 18


 518              	.LBE12:
 519              	.LBB13:
 117:Core/Src/main.c ****     }
 520              		.loc 1 117 0 is_stmt 1 discriminator 3
 521 00ac FFF7FEFF 		bl	rand
 522              	.LVL31:
 523 00b0 264C     		ldr	r4, .L28+4
 524 00b2 84FB0023 		smull	r2, r3, r4, r0
 525 00b6 C517     		asrs	r5, r0, #31
 526 00b8 C5EB6315 		rsb	r5, r5, r3, asr #5
 527 00bc 4FF49679 		mov	r9, #300
 528 00c0 09FB1505 		mls	r5, r9, r5, r0
 529 00c4 FFF7FEFF 		bl	rand
 530              	.LVL32:
 531 00c8 84FB0023 		smull	r2, r3, r4, r0
 532 00cc C617     		asrs	r6, r0, #31
 533 00ce C6EB6316 		rsb	r6, r6, r3, asr #5
 534 00d2 09FB1606 		mls	r6, r9, r6, r0
 535 00d6 FFF7FEFF 		bl	rand
 536              	.LVL33:
 537 00da 84FB0023 		smull	r2, r3, r4, r0
 538 00de C717     		asrs	r7, r0, #31
 539 00e0 C7EB6317 		rsb	r7, r7, r3, asr #5
 540 00e4 09FB1707 		mls	r7, r9, r7, r0
 541 00e8 FFF7FEFF 		bl	rand
 542              	.LVL34:
 543 00ec 84FB0034 		smull	r3, r4, r4, r0
 544 00f0 C317     		asrs	r3, r0, #31
 545 00f2 C3EB6414 		rsb	r4, r3, r4, asr #5
 546 00f6 09FB1404 		mls	r4, r9, r4, r0
 547 00fa FFF7FEFF 		bl	rand
 548              	.LVL35:
 549 00fe 144B     		ldr	r3, .L28+8
 550 0100 83FB0023 		smull	r2, r3, r3, r0
 551 0104 1A18     		adds	r2, r3, r0
 552 0106 C317     		asrs	r3, r0, #31
 553 0108 C3EBE233 		rsb	r3, r3, r2, asr #15
 554 010c C3EB0343 		rsb	r3, r3, r3, lsl #16
 555 0110 C31A     		subs	r3, r0, r3
 556 0112 0093     		str	r3, [sp]
 557 0114 2346     		mov	r3, r4
 558 0116 3A46     		mov	r2, r7
 559 0118 3146     		mov	r1, r6
 560 011a 2846     		mov	r0, r5
 561 011c FFF7FEFF 		bl	Rectf
 562              	.LVL36:
 115:Core/Src/main.c ****     { 
 563              		.loc 1 115 0 discriminator 3
 564 0120 08F10108 		add	r8, r8, #1
 565              	.LVL37:
 566              	.L24:
 115:Core/Src/main.c ****     { 
 567              		.loc 1 115 0 is_stmt 0 discriminator 1
 568 0124 B8F1090F 		cmp	r8, #9
 569 0128 C0DD     		ble	.L25
 570              	.LVL38:
 571              	.L26:
ARM GAS  /tmp/ccvAwqLn.s 			page 19


 572              	.LBE13:
 106:Core/Src/main.c **** 		LCD_Clear(0x07E0);
 573              		.loc 1 106 0 is_stmt 1
 574 012a 1F20     		movs	r0, #31
 575 012c FFF7FEFF 		bl	LCD_Clear
 576              	.LVL39:
 107:Core/Src/main.c **** 		LCD_Clear(0xF800);
 577              		.loc 1 107 0
 578 0130 4FF4FC60 		mov	r0, #2016
 579 0134 FFF7FEFF 		bl	LCD_Clear
 580              	.LVL40:
 108:Core/Src/main.c **** 
 581              		.loc 1 108 0
 582 0138 4FF47840 		mov	r0, #63488
 583 013c FFF7FEFF 		bl	LCD_Clear
 584              	.LVL41:
 585              	.LBB14:
 110:Core/Src/main.c ****     {
 586              		.loc 1 110 0
 587 0140 4FF00008 		mov	r8, #0
 588 0144 ACE7     		b	.L22
 589              	.L29:
 590 0146 00BF     		.align	2
 591              	.L28:
 592 0148 00000000 		.word	.LC0
 593 014c B5814E1B 		.word	458129845
 594 0150 01800080 		.word	-2147450879
 595              	.LBE14:
 596              		.cfi_endproc
 597              	.LFE131:
 599              		.comm	huart2,68,4
 600              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 601              		.align	2
 602              	.LC0:
 603 0000 68656C6C 		.ascii	"hello world!\012\000"
 603      6F20776F 
 603      726C6421 
 603      0A00
 604              		.text
 605              	.Letext0:
 606              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 607              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 608              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 609              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 610              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 611              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 612              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 613              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 614              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 615              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 616              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 617              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 618              		.file 15 "/usr/include/newlib/sys/lock.h"
 619              		.file 16 "/usr/include/newlib/sys/_types.h"
 620              		.file 17 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 621              		.file 18 "/usr/include/newlib/sys/reent.h"
 622              		.file 19 "libs/ili9341/ili9341.h"
ARM GAS  /tmp/ccvAwqLn.s 			page 20


 623              		.file 20 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/ccvAwqLn.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvAwqLn.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccvAwqLn.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccvAwqLn.s:181    .text.MX_GPIO_Init:00000000000000e8 $d
     /tmp/ccvAwqLn.s:189    .text.Error_Handler:0000000000000000 $t
     /tmp/ccvAwqLn.s:196    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccvAwqLn.s:222    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccvAwqLn.s:228    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccvAwqLn.s:272    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart2
     /tmp/ccvAwqLn.s:278    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccvAwqLn.s:285    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccvAwqLn.s:404    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccvAwqLn.s:410    .text.main:0000000000000000 $t
     /tmp/ccvAwqLn.s:417    .text.main:0000000000000000 main
     /tmp/ccvAwqLn.s:592    .text.main:0000000000000148 $d
     /tmp/ccvAwqLn.s:601    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ili9341_init
serial_print
ili9341_read_id4
rand
Rect
Rectf
LCD_Clear
