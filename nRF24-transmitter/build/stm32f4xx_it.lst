ARM GAS  /tmp/ccseD5o8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f4xx_it.c ****   *
  16:Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Src/stm32f4xx_it.c ****   */
  18:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f4xx_it.c **** 
  20:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f4xx_it.c **** #include "main.h"
  22:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32f4xx_it.c **** 
  27:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32f4xx_it.c **** 
  30:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  31:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccseD5o8.s 			page 2


  32:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32f4xx_it.c **** 
  35:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Src/stm32f4xx_it.c **** 
  37:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32f4xx_it.c **** 
  55:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  60:Src/stm32f4xx_it.c **** 
  61:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /******************************************************************************/
  64:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  65:Src/stm32f4xx_it.c **** /******************************************************************************/
  66:Src/stm32f4xx_it.c **** /**
  67:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Src/stm32f4xx_it.c ****   */
  69:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  70:Src/stm32f4xx_it.c **** {
  28              		.loc 1 70 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE130:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
ARM GAS  /tmp/ccseD5o8.s 			page 3


  48              	.LFB131:
  71:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Src/stm32f4xx_it.c **** 
  73:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Src/stm32f4xx_it.c ****   while (1)
  76:Src/stm32f4xx_it.c ****   {
  77:Src/stm32f4xx_it.c ****   }
  78:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Src/stm32f4xx_it.c **** }
  80:Src/stm32f4xx_it.c **** 
  81:Src/stm32f4xx_it.c **** /**
  82:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Src/stm32f4xx_it.c ****   */
  84:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  85:Src/stm32f4xx_it.c **** {
  49              		.loc 1 85 0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L4:
  56 0000 FEE7     		b	.L4
  57              		.cfi_endproc
  58              	.LFE131:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	MemManage_Handler:
  69              	.LFB132:
  86:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Src/stm32f4xx_it.c **** 
  88:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Src/stm32f4xx_it.c ****   while (1)
  90:Src/stm32f4xx_it.c ****   {
  91:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c ****   }
  94:Src/stm32f4xx_it.c **** }
  95:Src/stm32f4xx_it.c **** 
  96:Src/stm32f4xx_it.c **** /**
  97:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  98:Src/stm32f4xx_it.c ****   */
  99:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 100:Src/stm32f4xx_it.c **** {
  70              		.loc 1 100 0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.L6:
ARM GAS  /tmp/ccseD5o8.s 			page 4


  77 0000 FEE7     		b	.L6
  78              		.cfi_endproc
  79              	.LFE132:
  81              		.section	.text.BusFault_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	BusFault_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	BusFault_Handler:
  90              	.LFB133:
 101:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Src/stm32f4xx_it.c **** 
 103:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Src/stm32f4xx_it.c ****   while (1)
 105:Src/stm32f4xx_it.c ****   {
 106:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c ****   }
 109:Src/stm32f4xx_it.c **** }
 110:Src/stm32f4xx_it.c **** 
 111:Src/stm32f4xx_it.c **** /**
 112:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 113:Src/stm32f4xx_it.c ****   */
 114:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 115:Src/stm32f4xx_it.c **** {
  91              		.loc 1 115 0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.L8:
  98 0000 FEE7     		b	.L8
  99              		.cfi_endproc
 100              	.LFE133:
 102              		.section	.text.UsageFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	UsageFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	UsageFault_Handler:
 111              	.LFB134:
 116:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Src/stm32f4xx_it.c **** 
 118:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Src/stm32f4xx_it.c ****   while (1)
 120:Src/stm32f4xx_it.c ****   {
 121:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Src/stm32f4xx_it.c ****   }
 124:Src/stm32f4xx_it.c **** }
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccseD5o8.s 			page 5


 127:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Src/stm32f4xx_it.c ****   */
 129:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 130:Src/stm32f4xx_it.c **** {
 112              		.loc 1 130 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L10:
 119 0000 FEE7     		b	.L10
 120              		.cfi_endproc
 121              	.LFE134:
 123              		.section	.text.SVC_Handler,"ax",%progbits
 124              		.align	1
 125              		.global	SVC_Handler
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	SVC_Handler:
 132              	.LFB135:
 131:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Src/stm32f4xx_it.c ****   while (1)
 135:Src/stm32f4xx_it.c ****   {
 136:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****   }
 139:Src/stm32f4xx_it.c **** }
 140:Src/stm32f4xx_it.c **** 
 141:Src/stm32f4xx_it.c **** /**
 142:Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Src/stm32f4xx_it.c ****   */
 144:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 145:Src/stm32f4xx_it.c **** {
 133              		.loc 1 145 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE135:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	DebugMon_Handler:
 151              	.LFB136:
 146:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccseD5o8.s 			page 6


 148:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Src/stm32f4xx_it.c **** 
 151:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Src/stm32f4xx_it.c **** }
 153:Src/stm32f4xx_it.c **** 
 154:Src/stm32f4xx_it.c **** /**
 155:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 156:Src/stm32f4xx_it.c ****   */
 157:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 158:Src/stm32f4xx_it.c **** {
 152              		.loc 1 158 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE136:
 161              		.section	.text.PendSV_Handler,"ax",%progbits
 162              		.align	1
 163              		.global	PendSV_Handler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	PendSV_Handler:
 170              	.LFB137:
 159:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Src/stm32f4xx_it.c **** 
 161:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Src/stm32f4xx_it.c **** 
 164:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Src/stm32f4xx_it.c **** }
 166:Src/stm32f4xx_it.c **** 
 167:Src/stm32f4xx_it.c **** /**
 168:Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Src/stm32f4xx_it.c ****   */
 170:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 171:Src/stm32f4xx_it.c **** {
 171              		.loc 1 171 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE137:
 180              		.section	.text.SysTick_Handler,"ax",%progbits
 181              		.align	1
 182              		.global	SysTick_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	SysTick_Handler:
ARM GAS  /tmp/ccseD5o8.s 			page 7


 189              	.LFB138:
 172:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Src/stm32f4xx_it.c **** 
 174:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /**
 181:Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 182:Src/stm32f4xx_it.c ****   */
 183:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 184:Src/stm32f4xx_it.c **** {
 190              		.loc 1 184 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		.loc 1 184 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI0:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 185:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Src/stm32f4xx_it.c ****   HAL_IncTick();
 200              		.loc 1 188 0
 201 0002 FFF7FEFF 		bl	HAL_IncTick
 202              	.LVL0:
 203 0006 08BD     		pop	{r3, pc}
 204              		.cfi_endproc
 205              	.LFE138:
 207              		.text
 208              	.Letext0:
 209              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 210              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 211              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 212              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 213              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccseD5o8.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccseD5o8.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccseD5o8.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccseD5o8.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccseD5o8.s:82     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:89     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccseD5o8.s:103    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:110    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccseD5o8.s:124    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:131    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccseD5o8.s:143    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:150    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccseD5o8.s:162    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:169    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccseD5o8.s:181    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccseD5o8.s:188    .text.SysTick_Handler:0000000000000000 SysTick_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
