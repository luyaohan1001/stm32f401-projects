ARM GAS  /tmp/ccCKBwQQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB134:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2022 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** #include "ble.h"
  25:Src/main.c    **** #include <stdio.h>
  26:Src/main.c    **** #include <nRF24.h>
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
ARM GAS  /tmp/ccCKBwQQ.s 			page 2


  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    ****  UART_HandleTypeDef huart2;
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  52:Src/main.c    **** void SystemClock_Config(void);
  53:Src/main.c    **** static void MX_GPIO_Init(void);
  54:Src/main.c    **** static void MX_USART2_UART_Init(void);
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /**
  65:Src/main.c    ****   * @brief  The application entry point.
  66:Src/main.c    ****   * @retval int
  67:Src/main.c    ****   */
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    ****   /* USER CODE END 1 */
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccCKBwQQ.s 			page 3


  90:Src/main.c    ****   MX_GPIO_Init();
  91:Src/main.c    ****   MX_USART2_UART_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    ****   // nRF24_tx_self_test();
  94:Src/main.c    ****   // nRF24_configure_tx_mode();
  95:Src/main.c    **** 
  96:Src/main.c    **** 	ble_struct ble;
  97:Src/main.c    **** 	ble_begin(&ble,"nRF24_BLE");
  98:Src/main.c    ****   nRF24_print_all_registers();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END 2 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Infinite loop */
 103:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 104:Src/main.c    ****   while (1)
 105:Src/main.c    ****   {
 106:Src/main.c    ****       
 107:Src/main.c    ****     // HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 108:Src/main.c    ****     // HAL_Delay (200);
 109:Src/main.c    ****     // HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 110:Src/main.c    ****     // HAL_Delay (200);
 111:Src/main.c    **** 
 112:Src/main.c    ****     // nRF24_keep_sending();
 113:Src/main.c    **** 		ble_advertise(&ble,0xff,0,0);
 114:Src/main.c    **** 		//蓝牙广播信道有3个，这里切换广播信道
 115:Src/main.c    **** 		ble_hopChannel(&ble); 
 116:Src/main.c    **** 
 117:Src/main.c    ****     // nRF24_print_all_registers();
 118:Src/main.c    ****     // HAL_Delay (1000);
 119:Src/main.c    ****     // hopChannel();
 120:Src/main.c    **** 
 121:Src/main.c    ****     /* USER CODE END WHILE */
 122:Src/main.c    **** 
 123:Src/main.c    ****     /* USER CODE BEGIN 3 */
 124:Src/main.c    ****   }
 125:Src/main.c    ****   /* USER CODE END 3 */
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** /**
 129:Src/main.c    ****   * @brief System Clock Configuration
 130:Src/main.c    ****   * @retval None
 131:Src/main.c    ****   */
 132:Src/main.c    **** void SystemClock_Config(void)
 133:Src/main.c    **** {
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136:Src/main.c    **** 
 137:Src/main.c    ****   /** Configure the main internal regulator output voltage
 138:Src/main.c    ****   */
 139:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 140:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 141:Src/main.c    **** 
 142:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 143:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 144:Src/main.c    ****   */
 145:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 146:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccCKBwQQ.s 			page 4


 147:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 154:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     Error_Handler();
 157:Src/main.c    ****   }
 158:Src/main.c    **** 
 159:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Src/main.c    ****   */
 161:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 166:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Src/main.c    **** 
 168:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 169:Src/main.c    ****   {
 170:Src/main.c    ****     Error_Handler();
 171:Src/main.c    ****   }
 172:Src/main.c    **** }
 173:Src/main.c    **** 
 174:Src/main.c    **** /**
 175:Src/main.c    ****   * @brief USART2 Initialization Function
 176:Src/main.c    ****   * @param None
 177:Src/main.c    ****   * @retval None
 178:Src/main.c    ****   */
 179:Src/main.c    **** static void MX_USART2_UART_Init(void)
 180:Src/main.c    **** {
 181:Src/main.c    **** 
 182:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 183:Src/main.c    **** 
 184:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 189:Src/main.c    ****   huart2.Instance = USART2;
 190:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 191:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 192:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 193:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 194:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 195:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 196:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 197:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 198:Src/main.c    ****   {
 199:Src/main.c    ****     Error_Handler();
 200:Src/main.c    ****   }
 201:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
ARM GAS  /tmp/ccCKBwQQ.s 			page 5


 204:Src/main.c    **** 
 205:Src/main.c    **** }
 206:Src/main.c    **** 
 207:Src/main.c    **** /**
 208:Src/main.c    ****   * @brief GPIO Initialization Function
 209:Src/main.c    ****   * @param None
 210:Src/main.c    ****   * @retval None
 211:Src/main.c    ****   */
 212:Src/main.c    **** static void MX_GPIO_Init(void)
 213:Src/main.c    **** {
  27              		.loc 1 213 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 64
 214:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 214 0
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
  49              	.LBB4:
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* GPIO Ports Clock Enable */
 217:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 217 0
  51 0010 0194     		str	r4, [sp, #4]
  52 0012 304B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56 001c 1A6B     		ldr	r2, [r3, #48]
  57 001e 02F00402 		and	r2, r2, #4
  58 0022 0192     		str	r2, [sp, #4]
  59 0024 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              	.LBB5:
 218:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  62              		.loc 1 218 0
  63 0026 0294     		str	r4, [sp, #8]
  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 42F08002 		orr	r2, r2, #128
  66 002e 1A63     		str	r2, [r3, #48]
  67 0030 1A6B     		ldr	r2, [r3, #48]
  68 0032 02F08002 		and	r2, r2, #128
ARM GAS  /tmp/ccCKBwQQ.s 			page 6


  69 0036 0292     		str	r2, [sp, #8]
  70 0038 029A     		ldr	r2, [sp, #8]
  71              	.LBE5:
  72              	.LBB6:
 219:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  73              		.loc 1 219 0
  74 003a 0394     		str	r4, [sp, #12]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 42F00102 		orr	r2, r2, #1
  77 0042 1A63     		str	r2, [r3, #48]
  78 0044 1A6B     		ldr	r2, [r3, #48]
  79 0046 02F00102 		and	r2, r2, #1
  80 004a 0392     		str	r2, [sp, #12]
  81 004c 039A     		ldr	r2, [sp, #12]
  82              	.LBE6:
  83              	.LBB7:
 220:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 220 0
  85 004e 0494     		str	r4, [sp, #16]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 42F00202 		orr	r2, r2, #2
  88 0056 1A63     		str	r2, [r3, #48]
  89 0058 1B6B     		ldr	r3, [r3, #48]
  90 005a 03F00203 		and	r3, r3, #2
  91 005e 0493     		str	r3, [sp, #16]
  92 0060 049B     		ldr	r3, [sp, #16]
  93              	.LBE7:
 221:Src/main.c    **** 
 222:Src/main.c    ****   /*Configure GPIO pin Output Level */
 223:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_8, GPIO_PIN_RESET);
  94              		.loc 1 223 0
  95 0062 1D4D     		ldr	r5, .L3+4
  96 0064 2246     		mov	r2, r4
  97 0066 4FF49071 		mov	r1, #288
  98 006a 2846     		mov	r0, r5
  99 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 100              	.LVL0:
 224:Src/main.c    **** 
 225:Src/main.c    ****   /*Configure GPIO pin Output Level */
 226:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10|GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 101              		.loc 1 226 0
 102 0070 1A4E     		ldr	r6, .L3+8
 103 0072 2246     		mov	r2, r4
 104 0074 4FF48661 		mov	r1, #1072
 105 0078 3046     		mov	r0, r6
 106 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 107              	.LVL1:
 227:Src/main.c    **** 
 228:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 229:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 108              		.loc 1 229 0
 109 007e 4FF40053 		mov	r3, #8192
 110 0082 0593     		str	r3, [sp, #20]
 230:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 111              		.loc 1 230 0
 112 0084 4FF40413 		mov	r3, #2162688
 113 0088 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccCKBwQQ.s 			page 7


 231:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 231 0
 115 008a 0794     		str	r4, [sp, #28]
 232:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 232 0
 117 008c 05A9     		add	r1, sp, #20
 118 008e 1448     		ldr	r0, .L3+12
 119 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL2:
 233:Src/main.c    **** 
 234:Src/main.c    ****   /*Configure GPIO pins : LD2_Pin PA8 */
 235:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_8;
 121              		.loc 1 235 0
 122 0094 4FF49073 		mov	r3, #288
 123 0098 0593     		str	r3, [sp, #20]
 236:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 124              		.loc 1 236 0
 125 009a 0127     		movs	r7, #1
 126 009c 0697     		str	r7, [sp, #24]
 237:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 237 0
 128 009e 0794     		str	r4, [sp, #28]
 238:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 129              		.loc 1 238 0
 130 00a0 0894     		str	r4, [sp, #32]
 239:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 131              		.loc 1 239 0
 132 00a2 05A9     		add	r1, sp, #20
 133 00a4 2846     		mov	r0, r5
 134 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 135              	.LVL3:
 240:Src/main.c    **** 
 241:Src/main.c    ****   /*Configure GPIO pins : PB10 PB4 PB5 */
 242:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_4|GPIO_PIN_5;
 136              		.loc 1 242 0
 137 00aa 4FF48663 		mov	r3, #1072
 138 00ae 0593     		str	r3, [sp, #20]
 243:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 139              		.loc 1 243 0
 140 00b0 0697     		str	r7, [sp, #24]
 244:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 141              		.loc 1 244 0
 142 00b2 0794     		str	r4, [sp, #28]
 245:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 143              		.loc 1 245 0
 144 00b4 0894     		str	r4, [sp, #32]
 246:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 145              		.loc 1 246 0
 146 00b6 05A9     		add	r1, sp, #20
 147 00b8 3046     		mov	r0, r6
 148 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL4:
 247:Src/main.c    **** 
 248:Src/main.c    ****   /*Configure GPIO pin : PA10 */
 249:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 150              		.loc 1 249 0
 151 00be 4FF48063 		mov	r3, #1024
ARM GAS  /tmp/ccCKBwQQ.s 			page 8


 152 00c2 0593     		str	r3, [sp, #20]
 250:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 153              		.loc 1 250 0
 154 00c4 0694     		str	r4, [sp, #24]
 251:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 251 0
 156 00c6 0794     		str	r4, [sp, #28]
 252:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 157              		.loc 1 252 0
 158 00c8 05A9     		add	r1, sp, #20
 159 00ca 2846     		mov	r0, r5
 160 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL5:
 253:Src/main.c    **** 
 254:Src/main.c    **** }
 162              		.loc 1 254 0
 163 00d0 0BB0     		add	sp, sp, #44
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 20
 166              		@ sp needed
 167 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 168              	.L4:
 169              		.align	2
 170              	.L3:
 171 00d4 00380240 		.word	1073887232
 172 00d8 00000240 		.word	1073872896
 173 00dc 00040240 		.word	1073873920
 174 00e0 00080240 		.word	1073874944
 175              		.cfi_endproc
 176              	.LFE134:
 178              		.section	.text.Error_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	Error_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	Error_Handler:
 187              	.LFB135:
 255:Src/main.c    **** 
 256:Src/main.c    **** /* USER CODE BEGIN 4 */
 257:Src/main.c    **** 
 258:Src/main.c    **** /* USER CODE END 4 */
 259:Src/main.c    **** 
 260:Src/main.c    **** /**
 261:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 262:Src/main.c    ****   * @retval None
 263:Src/main.c    ****   */
 264:Src/main.c    **** void Error_Handler(void)
 265:Src/main.c    **** {
 188              		.loc 1 265 0
 189              		.cfi_startproc
 190              		@ Volatile: function does not return.
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LBB8:
ARM GAS  /tmp/ccCKBwQQ.s 			page 9


 195              	.LBB9:
 196              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /tmp/ccCKBwQQ.s 			page 10


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccCKBwQQ.s 			page 11


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 197              		.loc 2 142 0
 198              		.syntax unified
 199              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 200 0000 72B6     		cpsid i
 201              	@ 0 "" 2
 202              		.thumb
 203              		.syntax unified
 204              	.L6:
 205 0002 FEE7     		b	.L6
 206              	.LBE9:
 207              	.LBE8:
 208              		.cfi_endproc
 209              	.LFE135:
 211              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	MX_USART2_UART_Init:
 219              	.LFB133:
 180:Src/main.c    **** 
 220              		.loc 1 180 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccCKBwQQ.s 			page 12


 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 189:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 229              		.loc 1 189 0
 230 0002 0A48     		ldr	r0, .L11
 231 0004 0A4B     		ldr	r3, .L11+4
 232 0006 0360     		str	r3, [r0]
 190:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 233              		.loc 1 190 0
 234 0008 4FF4E133 		mov	r3, #115200
 235 000c 4360     		str	r3, [r0, #4]
 191:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 236              		.loc 1 191 0
 237 000e 0023     		movs	r3, #0
 238 0010 8360     		str	r3, [r0, #8]
 192:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 239              		.loc 1 192 0
 240 0012 C360     		str	r3, [r0, #12]
 193:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 241              		.loc 1 193 0
 242 0014 0361     		str	r3, [r0, #16]
 194:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 243              		.loc 1 194 0
 244 0016 0C22     		movs	r2, #12
 245 0018 4261     		str	r2, [r0, #20]
 195:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 246              		.loc 1 195 0
 247 001a 8361     		str	r3, [r0, #24]
 196:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 248              		.loc 1 196 0
 249 001c C361     		str	r3, [r0, #28]
 197:Src/main.c    ****   {
 250              		.loc 1 197 0
 251 001e FFF7FEFF 		bl	HAL_UART_Init
 252              	.LVL6:
 253 0022 00B9     		cbnz	r0, .L10
 254 0024 08BD     		pop	{r3, pc}
 255              	.L10:
 199:Src/main.c    ****   }
 256              		.loc 1 199 0
 257 0026 FFF7FEFF 		bl	Error_Handler
 258              	.LVL7:
 259              	.L12:
 260 002a 00BF     		.align	2
 261              	.L11:
 262 002c 00000000 		.word	huart2
 263 0030 00440040 		.word	1073759232
 264              		.cfi_endproc
 265              	.LFE133:
 267              		.section	.text.SystemClock_Config,"ax",%progbits
 268              		.align	1
 269              		.global	SystemClock_Config
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
ARM GAS  /tmp/ccCKBwQQ.s 			page 13


 273              		.fpu fpv4-sp-d16
 275              	SystemClock_Config:
 276              	.LFB132:
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 277              		.loc 1 133 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 80
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 00B5     		push	{lr}
 282              	.LCFI4:
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 14, -4
 285 0002 95B0     		sub	sp, sp, #84
 286              	.LCFI5:
 287              		.cfi_def_cfa_offset 88
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 288              		.loc 1 134 0
 289 0004 3022     		movs	r2, #48
 290 0006 0021     		movs	r1, #0
 291 0008 08A8     		add	r0, sp, #32
 292 000a FFF7FEFF 		bl	memset
 293              	.LVL8:
 135:Src/main.c    **** 
 294              		.loc 1 135 0
 295 000e 0023     		movs	r3, #0
 296 0010 0393     		str	r3, [sp, #12]
 297 0012 0493     		str	r3, [sp, #16]
 298 0014 0593     		str	r3, [sp, #20]
 299 0016 0693     		str	r3, [sp, #24]
 300 0018 0793     		str	r3, [sp, #28]
 301              	.LBB10:
 139:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 302              		.loc 1 139 0
 303 001a 0193     		str	r3, [sp, #4]
 304 001c 1F4A     		ldr	r2, .L19
 305 001e 116C     		ldr	r1, [r2, #64]
 306 0020 41F08051 		orr	r1, r1, #268435456
 307 0024 1164     		str	r1, [r2, #64]
 308 0026 126C     		ldr	r2, [r2, #64]
 309 0028 02F08052 		and	r2, r2, #268435456
 310 002c 0192     		str	r2, [sp, #4]
 311 002e 019A     		ldr	r2, [sp, #4]
 312              	.LBE10:
 313              	.LBB11:
 140:Src/main.c    **** 
 314              		.loc 1 140 0
 315 0030 0293     		str	r3, [sp, #8]
 316 0032 1B49     		ldr	r1, .L19+4
 317 0034 0A68     		ldr	r2, [r1]
 318 0036 22F44042 		bic	r2, r2, #49152
 319 003a 42F40042 		orr	r2, r2, #32768
 320 003e 0A60     		str	r2, [r1]
 321 0040 0A68     		ldr	r2, [r1]
 322 0042 02F44042 		and	r2, r2, #49152
 323 0046 0292     		str	r2, [sp, #8]
 324 0048 029A     		ldr	r2, [sp, #8]
 325              	.LBE11:
ARM GAS  /tmp/ccCKBwQQ.s 			page 14


 145:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 326              		.loc 1 145 0
 327 004a 0221     		movs	r1, #2
 328 004c 0891     		str	r1, [sp, #32]
 146:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 329              		.loc 1 146 0
 330 004e 0122     		movs	r2, #1
 331 0050 0B92     		str	r2, [sp, #44]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 332              		.loc 1 147 0
 333 0052 1022     		movs	r2, #16
 334 0054 0C92     		str	r2, [sp, #48]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 335              		.loc 1 148 0
 336 0056 0E91     		str	r1, [sp, #56]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 337              		.loc 1 149 0
 338 0058 0F93     		str	r3, [sp, #60]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 339              		.loc 1 150 0
 340 005a 1092     		str	r2, [sp, #64]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 341              		.loc 1 151 0
 342 005c 4FF4A873 		mov	r3, #336
 343 0060 1193     		str	r3, [sp, #68]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 344              		.loc 1 152 0
 345 0062 0423     		movs	r3, #4
 346 0064 1293     		str	r3, [sp, #72]
 153:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 347              		.loc 1 153 0
 348 0066 0723     		movs	r3, #7
 349 0068 1393     		str	r3, [sp, #76]
 154:Src/main.c    ****   {
 350              		.loc 1 154 0
 351 006a 08A8     		add	r0, sp, #32
 352 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 353              	.LVL9:
 354 0070 80B9     		cbnz	r0, .L17
 161:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 355              		.loc 1 161 0
 356 0072 0F23     		movs	r3, #15
 357 0074 0393     		str	r3, [sp, #12]
 163:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 358              		.loc 1 163 0
 359 0076 0221     		movs	r1, #2
 360 0078 0491     		str	r1, [sp, #16]
 164:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 361              		.loc 1 164 0
 362 007a 0023     		movs	r3, #0
 363 007c 0593     		str	r3, [sp, #20]
 165:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 364              		.loc 1 165 0
 365 007e 4FF48052 		mov	r2, #4096
 366 0082 0692     		str	r2, [sp, #24]
 166:Src/main.c    **** 
 367              		.loc 1 166 0
ARM GAS  /tmp/ccCKBwQQ.s 			page 15


 368 0084 0793     		str	r3, [sp, #28]
 168:Src/main.c    ****   {
 369              		.loc 1 168 0
 370 0086 03A8     		add	r0, sp, #12
 371 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 372              	.LVL10:
 373 008c 20B9     		cbnz	r0, .L18
 172:Src/main.c    **** 
 374              		.loc 1 172 0
 375 008e 15B0     		add	sp, sp, #84
 376              	.LCFI6:
 377              		.cfi_remember_state
 378              		.cfi_def_cfa_offset 4
 379              		@ sp needed
 380 0090 5DF804FB 		ldr	pc, [sp], #4
 381              	.L17:
 382              	.LCFI7:
 383              		.cfi_restore_state
 156:Src/main.c    ****   }
 384              		.loc 1 156 0
 385 0094 FFF7FEFF 		bl	Error_Handler
 386              	.LVL11:
 387              	.L18:
 170:Src/main.c    ****   }
 388              		.loc 1 170 0
 389 0098 FFF7FEFF 		bl	Error_Handler
 390              	.LVL12:
 391              	.L20:
 392              		.align	2
 393              	.L19:
 394 009c 00380240 		.word	1073887232
 395 00a0 00700040 		.word	1073770496
 396              		.cfi_endproc
 397              	.LFE132:
 399              		.section	.text.main,"ax",%progbits
 400              		.align	1
 401              		.global	main
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	main:
 408              	.LFB131:
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
 409              		.loc 1 69 0
 410              		.cfi_startproc
 411              		@ Volatile: function does not return.
 412              		@ args = 0, pretend = 0, frame = 40
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 00B5     		push	{lr}
 415              	.LCFI8:
 416              		.cfi_def_cfa_offset 4
 417              		.cfi_offset 14, -4
 418 0002 8BB0     		sub	sp, sp, #44
 419              	.LCFI9:
 420              		.cfi_def_cfa_offset 48
  76:Src/main.c    **** 
ARM GAS  /tmp/ccCKBwQQ.s 			page 16


 421              		.loc 1 76 0
 422 0004 FFF7FEFF 		bl	HAL_Init
 423              	.LVL13:
  83:Src/main.c    **** 
 424              		.loc 1 83 0
 425 0008 FFF7FEFF 		bl	SystemClock_Config
 426              	.LVL14:
  90:Src/main.c    ****   MX_USART2_UART_Init();
 427              		.loc 1 90 0
 428 000c FFF7FEFF 		bl	MX_GPIO_Init
 429              	.LVL15:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 430              		.loc 1 91 0
 431 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 432              	.LVL16:
  97:Src/main.c    ****   nRF24_print_all_registers();
 433              		.loc 1 97 0
 434 0014 0749     		ldr	r1, .L24
 435 0016 6846     		mov	r0, sp
 436 0018 FFF7FEFF 		bl	ble_begin
 437              	.LVL17:
  98:Src/main.c    **** 
 438              		.loc 1 98 0
 439 001c FFF7FEFF 		bl	nRF24_print_all_registers
 440              	.LVL18:
 441              	.L22:
 113:Src/main.c    **** 		//蓝牙广播信道有3个，这里切换广播信道
 442              		.loc 1 113 0 discriminator 1
 443 0020 0023     		movs	r3, #0
 444 0022 1A46     		mov	r2, r3
 445 0024 FF21     		movs	r1, #255
 446 0026 6846     		mov	r0, sp
 447 0028 FFF7FEFF 		bl	ble_advertise
 448              	.LVL19:
 115:Src/main.c    **** 
 449              		.loc 1 115 0 discriminator 1
 450 002c 6846     		mov	r0, sp
 451 002e FFF7FEFF 		bl	ble_hopChannel
 452              	.LVL20:
 453 0032 F5E7     		b	.L22
 454              	.L25:
 455              		.align	2
 456              	.L24:
 457 0034 00000000 		.word	.LC0
 458              		.cfi_endproc
 459              	.LFE131:
 461              		.comm	huart2,68,4
 462              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 463              		.align	2
 464              	.LC0:
 465 0000 6E524632 		.ascii	"nRF24_BLE\000"
 465      345F424C 
 465      4500
 466              		.text
 467              	.Letext0:
 468              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 469              		.file 4 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccCKBwQQ.s 			page 17


 470              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 471              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 472              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 473              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 474              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 475              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 476              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 477              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 478              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 479              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 480              		.file 15 "/usr/include/newlib/sys/lock.h"
 481              		.file 16 "/usr/include/newlib/sys/_types.h"
 482              		.file 17 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 483              		.file 18 "/usr/include/newlib/sys/reent.h"
 484              		.file 19 "Inc/nRF24.h"
 485              		.file 20 "/usr/include/newlib/stdlib.h"
 486              		.file 21 "Inc/ble.h"
ARM GAS  /tmp/ccCKBwQQ.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccCKBwQQ.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccCKBwQQ.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccCKBwQQ.s:171    .text.MX_GPIO_Init:00000000000000d4 $d
     /tmp/ccCKBwQQ.s:179    .text.Error_Handler:0000000000000000 $t
     /tmp/ccCKBwQQ.s:186    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccCKBwQQ.s:212    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccCKBwQQ.s:218    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccCKBwQQ.s:262    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000044 huart2
     /tmp/ccCKBwQQ.s:268    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccCKBwQQ.s:275    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccCKBwQQ.s:394    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccCKBwQQ.s:400    .text.main:0000000000000000 $t
     /tmp/ccCKBwQQ.s:407    .text.main:0000000000000000 main
     /tmp/ccCKBwQQ.s:457    .text.main:0000000000000034 $d
     /tmp/ccCKBwQQ.s:463    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ble_begin
nRF24_print_all_registers
ble_advertise
ble_hopChannel
